/**
* This is an autogenerated file created by the Stencil compiler.
* It contains typing information for all components that exist in this project.
*/
/* tslint:disable */

import '@stencil/core';


import {
  TunNavitem,
} from './interfaces';


export namespace Components {

  interface TunSplitView {
    'close': () => Promise<boolean>;
    'isOpen': boolean;
    'navItems': TunNavitem[];
    'open': () => Promise<boolean>;
    'position': 'left' | 'right';
    'toggleMenu': () => Promise<boolean>;
  }
  interface TunSplitViewAttributes extends StencilHTMLAttributes {
    'isOpen'?: boolean;
    'navItems'?: TunNavitem[];
    'position'?: 'left' | 'right';
  }
}

declare global {
  interface StencilElementInterfaces {
    'TunSplitView': Components.TunSplitView;
  }

  interface StencilIntrinsicElements {
    'tun-split-view': Components.TunSplitViewAttributes;
  }


  interface HTMLTunSplitViewElement extends Components.TunSplitView, HTMLStencilElement {}
  var HTMLTunSplitViewElement: {
    prototype: HTMLTunSplitViewElement;
    new (): HTMLTunSplitViewElement;
  };

  interface HTMLElementTagNameMap {
    'tun-split-view': HTMLTunSplitViewElement
  }

  interface ElementTagNameMap {
    'tun-split-view': HTMLTunSplitViewElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
